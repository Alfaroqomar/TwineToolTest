import __buffer_polyfill from 'vite-plugin-node-polyfills/shims/buffer'
globalThis.Buffer = globalThis.Buffer || __buffer_polyfill
import __global_polyfill from 'vite-plugin-node-polyfills/shims/global'
globalThis.global = globalThis.global || __global_polyfill
import __process_polyfill from 'vite-plugin-node-polyfills/shims/process'
globalThis.process = globalThis.process || __process_polyfill

import {
  require_react
} from "./chunk-Z55CEAP2.js";
import {
  __commonJS,
  __toESM,
  require_dist,
  require_dist2,
  require_dist3
} from "./chunk-KI2BRAH6.js";

// node_modules/react-scrollbar-size/utils/debounce.js
var require_debounce = __commonJS({
  "node_modules/react-scrollbar-size/utils/debounce.js"(exports) {
    "use strict";
    var import_dist = __toESM(require_dist());
    var import_dist2 = __toESM(require_dist2());
    var import_dist3 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var debounce = function debounce2(fn, waitFor) {
      var timeout;
      var clear = function clear2() {
        if (timeout != null) {
          clearTimeout(timeout);
          timeout = null;
        }
      };
      var debouncedFn = function debouncedFn2() {
        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        clear();
        timeout = setTimeout(function() {
          fn.apply(void 0, args);
        }, waitFor);
      };
      debouncedFn.cancel = function() {
        clear();
      };
      return debouncedFn;
    };
    var _default = debounce;
    exports.default = _default;
  }
});

// node_modules/react-scrollbar-size/utils/index.js
var require_utils = __commonJS({
  "node_modules/react-scrollbar-size/utils/index.js"(exports) {
    "use strict";
    var import_dist = __toESM(require_dist());
    var import_dist2 = __toESM(require_dist2());
    var import_dist3 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "debounce", {
      enumerable: true,
      get: function get() {
        return _debounce.default;
      }
    });
    var _debounce = _interopRequireDefault(require_debounce());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/react-scrollbar-size/useScrollbarSize.js
var require_useScrollbarSize = __commonJS({
  "node_modules/react-scrollbar-size/useScrollbarSize.js"(exports) {
    "use strict";
    var import_dist = __toESM(require_dist());
    var import_dist2 = __toESM(require_dist2());
    var import_dist3 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = require_react();
    var _utils = require_utils();
    function _slicedToArray(arr, i) {
      return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
    }
    function _nonIterableRest() {
      throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
    }
    function _unsupportedIterableToArray(o, minLen) {
      if (!o) return;
      if (typeof o === "string") return _arrayLikeToArray(o, minLen);
      var n = Object.prototype.toString.call(o).slice(8, -1);
      if (n === "Object" && o.constructor) n = o.constructor.name;
      if (n === "Map" || n === "Set") return Array.from(o);
      if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
    }
    function _arrayLikeToArray(arr, len) {
      if (len == null || len > arr.length) len = arr.length;
      for (var i = 0, arr2 = new Array(len); i < len; i++) {
        arr2[i] = arr[i];
      }
      return arr2;
    }
    function _iterableToArrayLimit(arr, i) {
      if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
      var _arr = [];
      var _n = true;
      var _d = false;
      var _e = void 0;
      try {
        for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
          _arr.push(_s.value);
          if (i && _arr.length === i) break;
        }
      } catch (err) {
        _d = true;
        _e = err;
      } finally {
        try {
          if (!_n && _i["return"] != null) _i["return"]();
        } finally {
          if (_d) throw _e;
        }
      }
      return _arr;
    }
    function _arrayWithHoles(arr) {
      if (Array.isArray(arr)) return arr;
    }
    var useScrollbarSize = function useScrollbarSize2() {
      var _useState = (0, _react.useState)({
        height: 0,
        width: 0
      }), _useState2 = _slicedToArray(_useState, 2), dimensions = _useState2[0], setDimensions = _useState2[1];
      var element = (0, _react.useRef)(null);
      (0, _react.useEffect)(function() {
        var getElement = function getElement2() {
          if (element.current == null) {
            element.current = document.createElement("div");
            element.current.style.width = "99px";
            element.current.style.height = "99px";
            element.current.style.overflow = "scroll";
            element.current.style.position = "absolute";
            element.current.style.top = "-9999px";
            element.current.setAttribute("aria-hidden", "true");
            element.current.setAttribute("role", "presentation");
          }
          return element.current;
        };
        var updateState = function updateState2() {
          var _getElement = getElement(), offsetHeight = _getElement.offsetHeight, clientHeight = _getElement.clientHeight, offsetWidth = _getElement.offsetWidth, clientWidth = _getElement.clientWidth;
          var scrollbarHeight = offsetHeight - clientHeight;
          var scrollbarWidth = offsetWidth - clientWidth;
          setDimensions(function(currentDimensions) {
            var height = currentDimensions.height, width = currentDimensions.width;
            return height !== scrollbarHeight || width !== scrollbarWidth ? {
              height: scrollbarHeight,
              width: scrollbarWidth
            } : currentDimensions;
          });
        };
        var handleResize = (0, _utils.debounce)(updateState, 100);
        window.addEventListener("resize", handleResize);
        document.body.appendChild(getElement());
        updateState();
        var elementToRemove = getElement();
        return function() {
          handleResize.cancel();
          window.removeEventListener("resize", handleResize);
          document.body.removeChild(elementToRemove);
        };
      }, []);
      return dimensions;
    };
    var _default = useScrollbarSize;
    exports.default = _default;
  }
});

// node_modules/react-scrollbar-size/ScrollbarSize.js
var require_ScrollbarSize = __commonJS({
  "node_modules/react-scrollbar-size/ScrollbarSize.js"(exports) {
    "use strict";
    var import_dist = __toESM(require_dist());
    var import_dist2 = __toESM(require_dist2());
    var import_dist3 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var _react = require_react();
    var _useScrollbarSize2 = _interopRequireDefault(require_useScrollbarSize());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var ScrollbarSize = function ScrollbarSize2(_ref) {
      var onChange = _ref.onChange;
      var _useScrollbarSize = (0, _useScrollbarSize2.default)(), height = _useScrollbarSize.height, width = _useScrollbarSize.width;
      (0, _react.useEffect)(function() {
        onChange({
          height,
          width
        });
      }, [height, width, onChange]);
      return null;
    };
    var _default = ScrollbarSize;
    exports.default = _default;
  }
});

// node_modules/react-scrollbar-size/index.js
var require_react_scrollbar_size = __commonJS({
  "node_modules/react-scrollbar-size/index.js"(exports) {
    var import_dist = __toESM(require_dist());
    var import_dist2 = __toESM(require_dist2());
    var import_dist3 = __toESM(require_dist3());
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    Object.defineProperty(exports, "useScrollbarSize", {
      enumerable: true,
      get: function get() {
        return _useScrollbarSize.default;
      }
    });
    exports.default = void 0;
    var _ScrollbarSize = _interopRequireDefault(require_ScrollbarSize());
    var _useScrollbarSize = _interopRequireDefault(require_useScrollbarSize());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    var _default = _ScrollbarSize.default;
    exports.default = _default;
  }
});
export default require_react_scrollbar_size();
//# sourceMappingURL=react-scrollbar-size.js.map
